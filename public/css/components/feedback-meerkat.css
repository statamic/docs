/* GROUP COMPONENTS / FEEDBACK MEERKAT
=================================================== */
/* Notes...

    URL example
    -----------
    Every page

    What does it do?
    ----------------
    Feedback panel at the bottom of the page

*/
/* HTML Example...

    <div class="c-feedback-meerkat">
        <h2>Docs Feedback</h2>
        <p>Submit improvements, related content, or suggestions through Github.</p>
        <a href="https://github.com/statamic/docs/issues/new" class="c-btn c-btn--1">Betterify this page</a>
        <img src="/img/meerkat.webp" alt="Meerkat" width="150" height="278">
    </div>

*/
@layer components {
    .c-feedback-meerkat {
        margin-block-start: var(--spacing-l-4);
        /* Custom */
        @media (width < 500px) {
            margin-block-start: 6.5rem;
        }
        padding: var(--spacing-l);
        background: var(--color-gradient-burnt);
        border-radius: var(--border-radius-l-2);

        position: relative;
        &::before {
            pointer-events: none;
            content: '';
            position: absolute;
            inset: 0;
            inline-size: 100%;
            height: 100%;
            transform: scaleX(-1);
            border-radius: 50px;

            /* https://css-pattern.com/graph-paper/ */
            --s: 220px; /* control the size*/
            --c1: white;
            --c2: transparent;
            --_g: #0000 90deg,var(--c1) 0;
            background:
              conic-gradient(from 90deg at 1px 1px,var(--_g)),
              conic-gradient(from 90deg at 1px 1px,var(--_g)),
              var(--c2);
            background-size: var(--s) var(--s), calc(var(--s)/5) calc(var(--s)/5);
        }
        /* Page preference is "dark" */
        html:has(#color-scheme option[value="dark"]:checked) & {
            &::before {
                opacity: 0.025;
            }
        }
        /* Page preference is "system", and system preference is "dark" */
        @media (prefers-color-scheme: dark) {
            html:has(#color-scheme option[value="system"]:checked) & {
                &::before {
                    opacity: 0.025;
                }
            }
        }
        > * {
            /* Pull component content above the pseudo content */
            position: relative;
        }
        &::after {
            content: '';
            position: absolute;
            z-index: -2;
            top: -2rem;
            right: 0;
            inline-size: 100%;
            border-block-start: 1px dashed var(--color-purple-light-1);
            transition: inline-size 0.35s var(--animation-timing-function-hipster) 0.1s;
        }

        img {
            position: absolute;
            z-index: var(--z-index-below-body);
            top: 0;
            inline-size: 60px;
            transition: all 1s var(--animation-timing-function-hipster) 0.1s;
            rotate: -5deg;
        }
        &:has(.c-btn:hover) {
            &::after {
                inline-size: 85%;
            }
            img {
                top: -100px;
                rotate: unset;
            }
        }

        h2 {
            font-family: var(--font-family-ui);
            font-size: var(--font-size-l-2);
            line-height: var(--font-size-l-2-line-height);
            font-weight: var(--font-family-ui-weight-medium);
        }

        .c-btn {
            margin: 0;
        }

        /* Custom */
        @media (width < 500px) {
            p {
                font-size: var(--font-size-s-1);
                line-height: var(--font-size-s-1-line-hegiht);
            }
        }
    }
}